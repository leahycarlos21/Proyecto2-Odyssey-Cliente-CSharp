<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        +jU4138AAAAASUVORK5CYII=
</value>
  </data>
</root>